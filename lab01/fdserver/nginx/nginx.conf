proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=all:32m max_size=1g;
client_body_buffer_size 10M;
client_max_body_size 10M;

upstream serversget {
    server main_service:8080 fail_timeout=50s max_fails=5 weight=2;
    server slave_service1:8080 fail_timeout=50s max_fails=5;
    server slave_service2:8080 fail_timeout=50s max_fails=5;
}

upstream serverspost {
    server main_service:8080 fail_timeout=50s max_fails=5;
}

map $request_method $upstream_location {
    "GET" serversget;
    "POST" serverspost;
    default serverspost;
}

server {
    listen 9090;
    server_name fdsystem.com www.fdsystem.com;

    proxy_cache all;
    proxy_cache_valid any 1h;

    gzip on;
    gzip_comp_level 2;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    add_header server fdsystem;

    location / {
            root /data/www;
    }

    location /test {
        return 301 $scheme://$http_host/;
    }

    location /status {
        stub_status;
    }

    location /images/ {
        root /data;
    }

    location /admin {
        return 301 $scheme://localhost:8086;
#         proxy_pass http://localhost:8086;
#         rewrite `^/databasets/(.*) /$1 break`;
#         proxy_set_header Host $host;
    }

    # В общем))) Это не работает. Вот Вам крест: https://github.com/springfox/springfox/issues/3680
    # И ещё один: https://github.com/springfox/springfox/issues/1921
    # I've tried my fucking best
    # Посмотрите, я даже комментарий оставил!!!
    # https://github.com/springfox/springfox/issues/2940
    location /api { #/ {
        proxy_no_cache 1;
#         proxy_pass http://swagger_server/swagger-ui/index.html?configUrl=/v3/api-docs/swagger-config;
#         rewrite ^/api$ http://localhost:8181/swagger-ui.html redirect;
        return 301 $scheme:///localhost:8666/swagger-ui/index.html?configUrl=/v3/api-docs/swagger-config;
    }

    location /api/v1 {
        proxy_no_cache 1;
#         proxy_pass http://serversget/api/v1;
        proxy_pass http://$upstream_location/api/v1;
    }
}